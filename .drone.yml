clone:
  git:
    image: plugins/git:next

matrix:
  PHING_OPTS:
    - -logger phing.listener.AnsiColorLogger

workspace:
  base: /test
  path: toolkit

services:
  web:
    image: fpfis/php56-build
    environment:
      - DOCUMENT_ROOT=/test/toolkit/build
  mysql:
    image: percona/percona-server:5.6
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes

pipeline:
  toolkit:
    image: fpfis/php56-build
    group: setup
    secrets: [ asda_aws_url, github_api_token ]
    commands:
      - rm -rf .git .drone.yml
      - git clone https://$${GITHUB_API_TOKEN}@github.com/$${DOWNSTREAM_OWNER}/$${DOWNSTREAM_REPO}.git .
      - composer require ec-europa/toolkit:dev-develop
      - cp vendor/ec-europa/toolkit/includes/phing/props/drone.props build.develop.props
      - ./toolkit/phing project-properties-validate ${PHING_OPTS}
    volumes:
      - /cache:/cache

  dump:
    image: backstopjs/backstopjs
    group: setup
    secrets: [ asda_aws_url ]
    commands:
      - backstop init
      - wget -q ${ASDA_AWS_URL}$${DOWNSTREAM_OWNER}/$${DOWNSTREAM_REPO}/dumps/dev-$${DOWNSTREAM_BRANCH}.tar.gz && tar -xzf dev-${DOWNSTREAM_BRANCH}.tar.gz || echo "Proceed..."
    when:
      event: pull_request
      branch: "toolkit/remote"

  build:
    image: fpfis/php56-build
    group: build
    commands:
      - ./toolkit/phing build-platform build-subsite-dev ${PHING_OPTS}
    volumes:
      - /cache/$${DOWNSTREAM_REPO}:/cache

  solr:
    image: fpfis/solr5
    group: build
    detach: true
    when:
      event: [ push, pull_request, tag ]

  install:
    image: fpfis/php56-build
    group: install
    secrets: [ asda_user, asda_pass]
    commands:
      - ./toolkit/phing install-clone project-database-link -D'db.dl.username'='$${ASDA_USER}' -D'db.dl.password'='$${ASDA_PASS}' ${PHING_OPTS}
      - ./toolkit/phing docker-backstop-generate ${PHING_OPTS}
    volumes:
      - /cache/$${DOWNSTREAM_REPO}:/cache

  visreg:
    image: backstopjs/backstopjs
    commands:
      - cp -f vendor/ec-europa/toolkit/includes/docker/docker-backstopjs/core/util/runPuppet.js /usr/local/lib/node_modules/backstopjs/core/util/runPuppet.js
      - cp -f vendor/ec-europa/toolkit/includes/docker/docker-backstopjs/core/util/compare/index.js /usr/local/lib/node_modules/backstopjs/core/util/compare/index.js
      - backstop reference || echo 'Proceed ...'
      - tar -czf dev-$${DOWNSTREAM_BRANCH}.tar.gz dump.sql backstop_data/ backstop.json
    volumes:
      - /cache/$${DOWNSTREAM_REPO}:/cache
    when:
      event: push
      branch: "toolkit/remote"

  dump:
    image: drillster/drone-rsync
    user: web_asda
    secrets: [ plugin_key, plugin_hosts ]
    source: dev-$${DOWNSTREAM_BRANCH}.tar.gz
    target: ec-europa/$${DOWNSTREAM_REPO}/dumps/
    when:
      event: push
      branch: "toolkit/remote"

  visreg:
    image: backstopjs/backstopjs
    commands:
      - cp -f vendor/ec-europa/toolkit/includes/docker/docker-backstopjs/core/util/runPuppet.js /usr/local/lib/node_modules/backstopjs/core/util/runPuppet.js
      - cp -f vendor/ec-europa/toolkit/includes/docker/docker-backstopjs/core/util/compare/index.js /usr/local/lib/node_modules/backstopjs/core/util/compare/index.js
      - backstop test || echo 'Proceed ...'
    when:
      event: pull_request
      branch: "toolkit/remote"

branches: toolkit/remote